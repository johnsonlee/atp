apply plugin: 'com.android.application'

dependencies {
    compile 'com.android.support:multidex:1.0.0'
}

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'
    defaultPublishConfig project.VERSION.endsWith('-SNAPSHOT') ? 'debug' : 'release'

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 22
        versionCode 1
        versionName '0.0.1'
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias System.properties['key.alias']
            keyPassword System.properties['key.alias.password']
            storeFile file(System.properties['key.store'])
            storePassword System.properties['key.store.password']
        }
    }

    buildTypes {
        debug {
            ndk {
                abiFilter 'armeabi'
            }

            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "GIT_REVISION", "\"${'git rev-parse HEAD'.execute().text.trim()}\""
        }
        release {
            ndk {
                abiFilter 'armeabi'
            }

            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "GIT_REVISION", "\"${'git rev-parse HEAD'.execute().text.trim()}\""
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
    }

    dexOptions {
        javaMaxHeapSize '4g'
        preDexLibraries true
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(output.outputFile.parent, output.outputFile.name.replace('.apk', "-${variant.versionName}.apk"))
        }
    }
}

tasks.withType(JavaCompile) {
    options.fork = true
    options.forkOptions.jvmArgs += ["-Xverify:none"]
}

tasks.withType(Test) {
    systemProperty "robolectric.logging", "stdout"
}

